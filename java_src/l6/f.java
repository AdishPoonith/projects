package l6;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
/* JADX INFO: Access modifiers changed from: package-private */
/* loaded from: classes.dex */
public final class f {
    private static List<String> a(String str) {
        int length = str.length();
        q6.b.d(length >= 2, "Invalid path \"%s\"", str);
        if (length == 2) {
            q6.b.d(str.charAt(0) == 1 && str.charAt(1) == 1, "Non-empty path \"%s\" had length 2", str);
            return Collections.emptyList();
        }
        int length2 = str.length() - 2;
        ArrayList arrayList = new ArrayList();
        StringBuilder sb = new StringBuilder();
        int i10 = 0;
        while (i10 < length) {
            int indexOf = str.indexOf(1, i10);
            if (indexOf < 0 || indexOf > length2) {
                throw new IllegalArgumentException("Invalid encoded resource path: \"" + str + "\"");
            }
            int i11 = indexOf + 1;
            char charAt = str.charAt(i11);
            if (charAt == 1) {
                String substring = str.substring(i10, indexOf);
                if (sb.length() != 0) {
                    sb.append(substring);
                    substring = sb.toString();
                    sb.setLength(0);
                }
                arrayList.add(substring);
            } else if (charAt == 16) {
                sb.append(str.substring(i10, indexOf));
                sb.append((char) 0);
            } else if (charAt != 17) {
                throw new IllegalArgumentException("Invalid encoded resource path: \"" + str + "\"");
            } else {
                sb.append(str.substring(i10, i11));
            }
            i10 = indexOf + 2;
        }
        return arrayList;
    }

    /* JADX INFO: Access modifiers changed from: package-private */
    public static m6.u b(String str) {
        return m6.u.u(a(str));
    }

    /* JADX INFO: Access modifiers changed from: package-private */
    public static <B extends m6.e<B>> String c(B b10) {
        StringBuilder sb = new StringBuilder();
        int q10 = b10.q();
        for (int i10 = 0; i10 < q10; i10++) {
            if (sb.length() > 0) {
                e(sb);
            }
            d(b10.n(i10), sb);
        }
        e(sb);
        return sb.toString();
    }

    private static void d(String str, StringBuilder sb) {
        int length = str.length();
        for (int i10 = 0; i10 < length; i10++) {
            char charAt = str.charAt(i10);
            if (charAt == 0) {
                sb.append((char) 1);
                charAt = 16;
            } else if (charAt == 1) {
                sb.append((char) 1);
                charAt = 17;
            }
            sb.append(charAt);
        }
    }

    private static void e(StringBuilder sb) {
        sb.append((char) 1);
        sb.append((char) 1);
    }

    /* JADX INFO: Access modifiers changed from: package-private */
    public static String f(String str) {
        StringBuilder sb = new StringBuilder(str);
        int length = sb.length() - 1;
        char charAt = sb.charAt(length);
        q6.b.d(charAt == 1, "successor may only operate on paths generated by encode", new Object[0]);
        sb.setCharAt(length, (char) (charAt + 1));
        return sb.toString();
    }
}
